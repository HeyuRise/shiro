<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pcbwx.shiro.dao.UserRoleRelationMapper" >
  <resultMap id="BaseResultMap" type="com.pcbwx.shiro.model.UserRoleRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account, role_id, enable, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_role_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_role_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pcbwx.shiro.model.UserRoleRelation" >
    insert into user_role_relation (id, account, role_id, 
      enable, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{enable,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pcbwx.shiro.model.UserRoleRelation" >
    insert into user_role_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcbwx.shiro.model.UserRoleRelation" >
    update user_role_relation
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcbwx.shiro.model.UserRoleRelation" >
    update user_role_relation
    set account = #{account,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      enable = #{enable,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 以下为自定义接口 -->
  <select id="load" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user_role_relation
    where enable = 1
  </select>
  <select id="selectByIds" resultMap="BaseResultMap" parameterType="map">
    select 
    <include refid="Base_Column_List" />
    from user_role_relation
    where enable = 1
    and (1 = 0
    <if test="ids != null">
    	or role_id in 
    	<foreach collection="ids" item="item" index="index" open="(" separator="," close=")">  
		    	#{item}  
    	</foreach>
    </if>)
  </select>
  <select id="deleteByAccount" resultMap="BaseResultMap" parameterType="map">
    delete 
    from user_role_relation
    where account = #{account,jdbcType=VARCHAR}
  </select>
</mapper>